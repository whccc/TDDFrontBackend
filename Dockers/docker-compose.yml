version: "3"
services:
  #Frontend React development
  TaskReactApp:
    container_name: TaskReactApp
    image: taskreactapp
    build:
      context: .
      dockerfile: ./Frontend/Dockerfile
    environment:
      - REACT_APP=1234
    volumes:
      - ../TDDFrontendReact:/var/www/
    command: bash -c "npm install && npm install --production && npm start"
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      net4:
        ipv4_address: 192.168.1.57
  #Backend Adonis js
  ApiAdonis:
    container_name: ApiAdonis
    image: apiadonis
    build:
      context: .
      dockerfile: ./Backend/Dockerfile
    command: bash -c "npm install && npm install --production && npm run dev"
    volumes:
      - ../TDDBackendAdonis/api:/var/www/
    ports:
      - 4001:4001
    networks:
      net4:
        ipv4_address: 192.168.1.58
  #Base de datos Postgres
  TDDDBPosgres:
    container_name: tdddbpostgre
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=tddtask
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=TDDtasks
    ports:
      - 3001:5432
    volumes:
      - ../data_pg:/var/lib/postgresql/data
    networks:
      net4:
        ipv4_address: 192.168.1.59
#Networks
networks:
  net4:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
